
package application.form.other;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.KeyEvent;
import javax.swing.*;


import com.formdev.flatlaf.FlatClientProperties;

import raven.toast.Notifications;
import Morsecode.MorsecodeLogic;
/**
 *
 * @author RATUL
 */
public class Morsecode extends javax.swing.JPanel {

    public Morsecode() {
        initComponents();

        Title.putClientProperty(FlatClientProperties.STYLE, ""
                + "font: 130% $h1.font");

        ChangeButton.putClientProperty(FlatClientProperties.STYLE, ""
            + "borderWidth:0;"
            + "focusWidth:0;");
        ChangeButton.setBackground(Color.decode("#0FA4AF"));

        ChangeButton.putClientProperty( "JButton.buttonType", "roundRect" );
        TextBox.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT,"Input your text here");
        TextBox.putClientProperty(FlatClientProperties.STYLE, ""+ "font: $h2.font");
        TextBox.setEditable(true);

        Outputbox.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT,"Your morse code will be here");
        Outputbox.setEditable(false);
        Outputbox.putClientProperty(FlatClientProperties.STYLE, ""+ "font: 130 $h2.font");

        TextBox.setLineWrap(true);
        TextBox.setWrapStyleWord(true);

        Outputbox.setLineWrap(true);
        Outputbox.setWrapStyleWord(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Ed itor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        jPanel1 = new application.form.other.pannelcolor("#90AEAD");
        Outputboxpane = new javax.swing.JScrollPane();
        Outputbox = new javax.swing.JTextArea();
        inptutboxpane = new javax.swing.JScrollPane();
        TextBox = new javax.swing.JTextArea();
        ChangeButton = new javax.swing.JButton();

        Title.setText("TEXT TO MORSECODE");

        Outputbox.setColumns(20);
        Outputbox.setRows(5);
        Outputboxpane.setViewportView(Outputbox);

        TextBox.setColumns(20);
        TextBox.setRows(5);
        inptutboxpane.setViewportView(TextBox);
        TextBox.addKeyListener(this);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inptutboxpane, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                    .addComponent(Outputboxpane))
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(inptutboxpane, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Outputboxpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        ChangeButton.setText("Convert");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChangeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(ChangeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents



    private  void ChangeButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (TextBox.getText().equals("")) {
            Notifications.getInstance().show(Notifications.Type.ERROR, "Please Enter Your Text Here");
            return;
        }
        Outputbox.setText(new MorsecodeLogic().getMorseCode(TextBox.getText()));
    }

    @Override
    public void keyTyped(KeyEvent e) {

    }

    @Override
    public void keyPressed(KeyEvent e) {

    }

    @Override
    public void keyReleased(KeyEvent e) {
        // ignore shift key press
        if(e.getKeyCode() != KeyEvent.VK_SHIFT){
            // retrieve text input
            String inputText = TextBox.getText();

            // update the GUI with the translated text
            Outputbox.setText(new MorsecodeLogic().getMorseCode(inputText));
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChangeButton;
    private javax.swing.JTextArea Outputbox;
    private javax.swing.JScrollPane Outputboxpane;
    private javax.swing.JTextArea TextBox;
    private javax.swing.JLabel Title;
    private javax.swing.JScrollPane inptutboxpane;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
